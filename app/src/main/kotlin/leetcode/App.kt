/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package leetcode

data class Input(val nums: IntArray)

class Solution {
  fun isPossible(nums: IntArray): Boolean {
    var lefts = HashMap<Int, Int>()
    var ends = HashMap<Int, Int>()

    for (num in nums) {
      lefts.put(num, lefts.getOrDefault(num, 0) + 1)
    }

    for (cur in nums) {
      val left = lefts.getOrDefault(cur, 0)
      if (left == 0) {
        continue
      }

      lefts.put(cur, left - 1)

      val before1 = cur - 1
      val ebefore1 = ends.getOrDefault(before1, 0)
      if (ebefore1 > 0) {
        ends.put(before1, ebefore1 - 1)
        ends.put(cur, ends.getOrDefault(cur, 0) + 1)
        continue
      }

      val after1 = cur + 1
      val after2 = cur + 2
      val lafter1 = lefts.getOrDefault(after1, 0)
      val lafter2 = lefts.getOrDefault(after2, 0)
      if ((lafter1 > 0) && (lafter2 > 0)) {
        lefts.put(after1, lafter1 - 1)
        lefts.put(after2, lafter2 - 1)
        ends.put(after2, ends.getOrDefault(after2, 0) + 1)
        continue
      }

      return false
    }

    return true
  }
}

fun main() {
  var inputs: Array<Input> =
      arrayOf(
          Input(intArrayOf(1, 2, 3, 3, 4, 5)),
          Input(intArrayOf(1, 2, 3, 3, 4, 4, 5, 5)),
          Input(intArrayOf(1, 2, 3, 4, 4, 5))
      )

  var solution = Solution()
  for (input in inputs) {
    var nums = input.nums
    var result = solution.isPossible(nums)
    println(result)
  }
}
